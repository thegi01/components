// Mixins

// base
@mixin blind {
    visibility:hidden; 
    overflow:hidden; 
    position:absolute; top:0; left:0; 
    width:1px; height:1px; 
    font-size : 0;
}
@mixin clearfix {
    // & {
    //     zoom:1;
    // }
    &:after {
        content:'';
        display:block; 
        clear:both; 
    }
}
@mixin ellipsis{
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
@mixin ellipsis-m($line) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $line; // 라인수
    -webkit-box-orient: vertical;
    word-wrap:break-word; 
}
@mixin prefix( $property, $value, $prefixes:() ) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
  // Output standard non-prefixed declaration
  #{$property}: $value;
}
@mixin user-select( $value ){
    @include prefix(user-select, $value, webkit moz ms);
    // -webkit-user-select: $property; 
    // -moz-user-select: $property; 
    // -ms-user-select: $property; 
    // user-select: $property; 
}

// box-sizing 
@mixin box-sizing( $box-model ) {
    @include prefix(box-sizing, $box-model, webkit moz);
    // -webkit-box-sizing: $box-model; // Safari <= 5
    //    -moz-box-sizing: $box-model; // Firefox <= 19
    //         box-sizing: $box-model;
}
// border-radius
@mixin border-radius( $radius ){
    @include prefix(border-radius, $radius, webkit moz);
	// -webkit-border-radius : $radius;
	//    -moz-border-radius : $radius;
	// 		border-radius : $radius;
	background-clip: padding-box;  // stops bg color from leaking outside the border
}
// border-radius-single
@mixin border-radius-single( $pos1, $pos2, $radius ){
    @include prefix(border-#{$pos1}-#{$pos2}-radius, $radius, webkit moz);
	// -webkit-border-#{$pos1}-#{$pos2}-radius : $radius;
	//    -moz-border-#{$pos1}-#{$pos2}-radius : $radius;
	// 		border-#{$pos1}-#{$pos2}-radius : $radius;
	background-clip: padding-box;  // stops bg color from leaking outside the border
}
// gradient
@mixin background-gradient( $col1, $col2 ){
    background-image: -webkit-linear-gradient(top, $col1 0%, $col2 100%);
    background-image: -o-linear-gradient(top, $col1 0%, $col2 100%);
    background-image: linear-gradient(to bottom, $col1 0%, $col2 100%);
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$col1}', endColorstr='#{$col2}', GradientType=0); // ie6~9
}
// transform
@mixin transition( $property, $duration, $ani ){
    @include prefix(transition, $property $duration $ani, webkit moz o);
    // -webkit-transition: $property $duration $ani; 
    // -moz-transition: $property $duration $ani; 
    // -o-transition: $property $duration $ani; 
    // transition: $property $duration $ani;
}
@mixin transitionDuration($time:0.5s){
    @include prefix(transition-duration, $time, webkit moz o);
    // -webkit-transition-duration : $time; 
    // -moz-transition-duration : $time; 
    // -o-transition-duration : $time; 
    // transition-duration : $time;
}
@mixin tarnslate3d($x, $y, $z){
    @include prefix(transform, translate3d($x, $y, $z), webkit moz o);
    // -webkit-transform : translate3d($x, $y, $z);
    // -moz-transform : translate3d($x, $y, $z);
    // -o-transform : translate3d($x, $y, $z);
    // transform : translate3d($x, $y, $z);
}
// flex
@mixin flex( $val ){
    @include prefix(flex, $val, webkit ms);
    // -webkit-flex: $val; 
    // -ms-flex: $val; 
    // flex: $val;
}