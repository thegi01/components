/* button */

// variable
$btn-radius : 0.3em;

// button
@mixin btn-hovered {
    background-color: #f1f1f1;
}
@mixin btn-focused {
    background-color: #f2f2f2;
    border-color: #bbb;
    outline : 0;
}
@mixin btn-pressed {
    background-color: yellow;
    border-color : orange;
}

button, html input[type=button], input[type=reset], input[type=submit] {
    -webkit-appearance: button;
    -moz-appearance: button;
    cursor: pointer;
}
button[disabled], html input[disabled] {
    cursor: default;
}
button::-moz-focus-inner, input::-moz-focus-inner {
    border: 0;
    padding: 0
}

.btn {
    display: inline-block;
    border: 1px solid transparent; 
    background: none;
    text-align : center; vertical-align: middle; white-space: nowrap;
    cursor: pointer;
    -webkit-user-select : none; -moz-user-select : none; -ms-user-select : none; user-select : none;
    -ms-touch-action : manipulation;
        touch-action : manipulation;
}
// button modifier : theme default
.btn--default {
    min-height: 1em;
    padding : 0;
    border-color : #e8e5e5; 
    background-color: #fff;
    vertical-align: baseline;
    font-family: $font-family; font-size: 1rem; color: #000;
    -webkit-tab-highlight-color : rgba(0, 0, 0, 0);
    &:hover {
        @include btn-hovered;
    }
    &:focus {
        @include btn-focused;
    }
    &[ aria-pressed="true" ] {
        @include btn-pressed;
    }
}
// button modifier : view plain
.btn--plain {
    border:none;
}
// button modifier : disabled
.btn[disabled],
.btn--disabled {
    pointer-events : none;
    // opacity: 0.4;
    background-color: #ebebeb;
    color : #aaa;
}
// custom fields(element) : text
.btn__txt { 
    overflow: hidden;
    display: inline-block;
    text-overflow : ellipsis;
    vertical-align: top;
}
// button modifier : size
.btn--s {
    font-size : rem(13);
    line-height: rem(24);
    .btn__txt {
        margin : 0 rem(10);
    }
}
.btn--m {
    font-size : rem(13);
    line-height: 2em;
    .btn__txt {
        margin : 0 rem(13);
    }
}
.btn--l {
    font-size : rem(15);
    line-height: rem(32);
    .btn__txt {
        margin : 0 rem(15);
    }
}
.btn--xl {
    font-size : rem(18);
    line-height: rem(38);
    .btn__txt {
        margin : 0 rem(18);
    }
}
// button modifier : togglable
input[data-role="button"] {
    position: absolute; left:-1000em;
    // visibility: hidden;              // tab key doesn't go focus
}
input[data-role="button"]:hover + .btn {
    @include btn-hovered;
}
input[data-role="button"]:focus + .btn {
    @include btn-focused;
}
input[data-role="button"]:checked + .btn {
    @include btn-pressed;
}
// button with icon
.btn__icon-left {
    margin-left : rem(13); margin-right: rem(-10);
}
.btn__icon-right {
    margin-right : rem(13); margin-left: rem(-10);
}
// buttons position 
.btns--pos-left {
    float: left;
}
.btns--pos-right {
    float: right;
}
.btns--pos-center {
    text-align: center;
}
// button gorup
.btn-group {
    overflow: hidden;
    .btn--default {
        float: left;
        margin-right: -1px;
    }
    .btn--default:focus,
    input[data-role="button"]:focus + .btn--default {
        position: relative; z-index: 1;
    }
}
.btn-group--justify {
    display: table;
    width : 100%;
    table-layout : fixed; border-collapse : seperate;
    .btn {
        display: table-cell;
        float : none;
        width : 1%;
    }
}


@if $is-rem == true {

    .btn--default {
        @include border-radius( $btn-radius );
    }

    // button style side ononly radius
    .btn-group {
        .btn--default:not(:nth-of-type(1)):not(:last-child) {
            @include border-radius(0);
        }    
        .btn--default:nth-of-type(1) {
            @include border-radius-single(top, right, 0);
            @include border-radius-single(bottom, right, 0);
        }
        .btn--default:last-child {
            @include border-radius-single(top, left, 0);
            @include border-radius-single(bottom, left, 0);
        }
    }

}